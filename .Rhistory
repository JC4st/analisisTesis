frequenciesCrosstabs <- function( dependiente = dependiente, independiente = independiente )
{
library(gmodels)
dependiente.independiente <- table(dependiente, independiente)
dependiente.independiente <- addmargins(dependiente.independiente) # Adding row/col margins
tabla <- CrossTable(dependiente,independiente, format=c("SPSS"), digits=1)
chi2 <- chisq.test(dependiente.independiente) # Do chisq test Ho: no relathionship
fisher <- fisher.test(dependiente.independiente) # Do fisher'exact test Ho: no relationship
x <- list(tabla, chi2, fisher )
names(x) <- c("tabla", "chi2", "fisher")
x
}
frequenciesCrosstabs(datos$LRA, datos$HTA)
frequenciesCrosstabs(datos$LRA, datos$DM)
frequenciesCrosstabs(datos$LRA, datos$EPOC)
frequenciesCrosstabs(datos$LRA, datos$ERC)
frequenciesCrosstabs(datos$LRA, datos$cardiopatiaIsquemica)
frequenciesCrosstabs(datos$LRA, datos$valvulopatia)
frequenciesCrosstabs(datos$LRA, datos$enferemdadAutoinmune)
frequenciesCrosstabs(datos$LRA, datos$MELD)
frequenciesCrosstabs(datos$LRA, datos$hipotension)
frequenciesCrosstabs(datos$LRA, datos$soporteVasopresor)
install.packages("foo")
formals(table)
formals(glimpse)
formals(class)
formals(list)
frequenciesCrosstabs(datos$LRA, datos$soporteVasopresor)
table(datos$LRA, datos$soporteVasopresor)
frequenciesCrosstabs <- function( dependiente = dependiente, independiente = independiente )
{
library(gmodels)
dependiente.independiente <- table(independiente, dependiente)
dependiente.independiente <- addmargins(dependiente.independiente) # Adding row/col margins
tabla <- CrossTable(independiente, dependiente, format=c("SPSS"), digits=1)
chi2 <- chisq.test(dependiente.independiente) # Do chisq test Ho: no relathionship
fisher <- fisher.test(dependiente.independiente) # Do fisher'exact test Ho: no relationship
x <- list(tabla, chi2, fisher )
names(x) <- c("tabla", "chi2", "fisher")
x
}
frequenciesCrosstabs(datos$LRA, datos$HTA)
frequenciesCrosstabs(datos$LRA, datos$DM)
table(datos$HTA, datos$LRA)
11/44
frequenciesCrosstabs <- function( dependiente = dependiente, independiente = independiente )
{
library(gmodels)
dependiente.independiente <- table(independiente, dependiente)
dependiente.independiente <- addmargins(dependiente.independiente) # Adding row/col margins
tabla <- CrossTable(independiente, dependiente, format=c("SPSS"), digits=1)
chi2 <- chisq.test(dependiente.independiente) # Do chisq test Ho: no relathionship
fisher <- fisher.test(dependiente.independiente) # Do fisher'exact test Ho: no relationship
x <- list(tabla, chi2, fisher )
names(x) <- c("tabla", "chi2", "fisher")
x
}
frequenciesCrosstabs(datos$LRA, datos$HTA)
frequenciesCrosstabs(datos$LRA, datos$DM)
frequenciesCrosstabs <- function( dependiente = dependiente, independiente = independiente )
{
library(gmodels)
dependiente.independiente <- table(independiente, dependiente)
dependiente.independiente <- addmargins(dependiente.independiente) # Adding row/col margins
tabla <- CrossTable(independiente, dependiente, format=c("SPSS"), digits=1)
chi2 <- chisq.test(dependiente.independiente) # Do chisq test Ho: no relathionship
#fisher <- fisher.test(dependiente.independiente) # Do fisher'exact test Ho: no relationship
x <- list(tabla, chi2, fisher )
names(x) <- c("tabla", "chi2", "fisher")
x
}
frequenciesCrosstabs(datos$LRA, datos$HTA)
frequenciesCrosstabs <- function( dependiente = dependiente, independiente = independiente )
{
library(gmodels)
dependiente.independiente <- table(independiente, dependiente)
dependiente.independiente <- addmargins(dependiente.independiente) # Adding row/col margins
tabla <- CrossTable(independiente, dependiente, format=c("SPSS"), digits=1)
chi2 <- chisq.test(dependiente.independiente) # Do chisq test Ho: no relathionship
#fisher <- fisher.test(dependiente.independiente) # Do fisher'exact test Ho: no relationship
x <- list(tabla, chi2 )
names(x) <- c("tabla", "chi2")
x
}
frequenciesCrosstabs(datos$LRA, datos$HTA)
frequenciesCrosstabs(datos$LRA, datos$DM)
frequenciesCrosstabs(datos$LRA, datos$EPOC)
frequenciesCrosstabs(datos$LRA, datos$ERC)
frequenciesCrosstabs(datos$LRA, datos$cardiopatiaIsquemica)
frequenciesCrosstabs(datos$LRA, datos$valvulopatia)
frequenciesCrosstabs(datos$LRA, datos$enferemdadAutoinmune)
frequenciesCrosstabs(datos$LRA, datos$MELD)
frequenciesCrosstabs(datos$LRA, datos$hipotension)
frequenciesCrosstabs(datos$LRA, datos$soporteVasopresor)
# LRA.HTA <- table(datos$LRA,datos$HTA)
# LRA.HTA <- addmargins(LRA.HTA) # Adding row/col margins
# CrossTable(datos$LRA,datos$HTA, format=c("SPSS"), digits=1)
# chisq.test(LRA.HTA) # Do chisq test Ho: no relathionship
# fisher.test(LRA.HTA) # Do fisher'exact test Ho: no relationship
#
# LRA.DM <- table(datos$LRA,datos$DM)
# LRA.DM <- addmargins(LRA.DM) # Adding row/col margins
# CrossTable(datos$LRA,datos$DM, format=c("SPSS"), digits=1)
# chisq.test(LRA.DM) # Do chisq test Ho: no relathionship
# fisher.test(LRA.DM) # Do fisher'exact test Ho: no relationship
#
# LRA.DM <- table(datos$LRA,datos$DM)
# LRA.DM <- addmargins(LRA.DM) # Adding row/col margins
# CrossTable(datos$LRA,datos$DM, format=c("SPSS"), digits=1)
# chisq.test(LRA.DM) # Do chisq test Ho: no relathionship
# fisher.test(LRA.DM) # Do fisher'exact test Ho: no relationship
xtabs(~admit + rank, data = mydata)
xtabs(~LRA + HTA, datos)
xtabs(~HTA + LRA, datos)
class(datos$LRA)
dput(names(datos))
glm(LRA ~ edad + sexo + MELD, data = datos, family = "binomial")
summary(glm(LRA ~ edad + sexo + MELD, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + UGRE, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + MELD + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + DM + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + HTA + soporteVasopresor, data = datos, family = "binomial"))
datos$LRA
summary(glm(LRA ~ edad + sexo + sodio + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + MELD + soporteVasopresor, data = datos, family = "binomial"))
datos$MELD
levels(datos$MELD)
summary(glm(LRA ~ sexo + MELD + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ MELD + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ MELD , data = datos, family = "binomial"))
summary(glm(LRA ~ MELD + ERC , data = datos, family = "binomial"))
dput(names(datos))
summary(glm(LRA ~ CP + edad + sexo , data = datos, family = "binomial"))
summary(glm(LRA ~ CP + edad + CUP , data = datos, family = "binomial"))
summary(glm(LRA ~ edad + CUP , data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + CUP , data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sexo + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + sodio + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ sodio + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ INR + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + ascitis + soporteVasopresor, data = datos, family = "binomial"))
summary(glm(LRA ~ edad + ascitis , data = datos, family = "binomial"))
summary(glm(LRA ~ sexo + ascitis , data = datos, family = "binomial"))
xtabs(datos$ascitis, datos$LRA)
xtabs(datos$ascitis, datos$LRA)
xtabs(datos$LRA, datos$ascitis)
frequenciesCrosstabs(datos$LRA, datos$ascitis)
labels(datos$ascitis)
levels(datos$ascitis)
names(levels(datos$ascitis))
levels(datos$ascitis)
dput(levels(datos$ascitis))
datos$ascitis <- ordered(datos$ascitis,
levels = c("NO",
"Grado 1: Leve",
"Grado 2: Moderada",
"Grado 3: Severa"),
labels = c("NO",
"Grado 1: Leve",
"Grado 2: Moderada",
"Grado 3: Severa"))
datos$ascitis
summary(glm(LRA ~ sexo + ascitis , data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis , data = datos, family = "binomial"))
# Paso 1: Source + library  ####
library("e1071")
library("dplyr")
library("xlsx")
library("pastecs")
library("OptimalCutpoints")
library("ggplot2")
library("lubridate")
library("readxl")
library("psych")
library("gmodels")
library("openintro")
suppressPackageStartupMessages(library("dplyr"))
# Paso 2 obtencion de datos
library(readxl)
base <- read_excel("~/OneDrive - Universidad del rosario/projects/Tesis/base.xlsx",
col_types = c("text", "text", "numeric",
"text", "numeric", "numeric", "numeric",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text", "text", "date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "text", "numeric", "numeric",
"text", "date", "numeric", "date",
"text", "date", "date"))
View(base)
datos <- as.data.frame(base)
# View the first 6 rows of data
head(datos)
#  View the last 6 rows of data
tail(datos)
#  View a condensed summary of the data
glimpse(datos)
# View its class
class(datos) #data.frame
# view dimensions
dim(datos) # Rows Columns
# #Look at column names
names(datos)
characters <- sapply(datos, is.character)
datos[characters] <- lapply(datos[characters], as.factor)
datos$ascitis <- ordered(datos$ascitis,
levels = c("NO",
"Grado 1: Leve",
"Grado 2: Moderada",
"Grado 3: Severa"),
# labels = c("NO",
#            "Grado 1: Leve",
#            "Grado 2: Moderada",
#            "Grado 3: Severa")
)
# Paso 1: Source + library  ####
library("e1071")
library("dplyr")
library("xlsx")
library("pastecs")
library("OptimalCutpoints")
library("ggplot2")
library("lubridate")
library("readxl")
library("psych")
library("gmodels")
library("openintro")
suppressPackageStartupMessages(library("dplyr"))
# Paso 2 obtencion de datos
library(readxl)
base <- read_excel("~/OneDrive - Universidad del rosario/projects/Tesis/base.xlsx",
col_types = c("text", "text", "numeric",
"text", "numeric", "numeric", "numeric",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text", "text", "date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "text", "numeric", "numeric",
"text", "date", "numeric", "date",
"text", "date", "date"))
View(base)
datos <- as.data.frame(base)
# View the first 6 rows of data
head(datos)
#  View the last 6 rows of data
tail(datos)
#  View a condensed summary of the data
glimpse(datos)
# View its class
class(datos) #data.frame
# view dimensions
dim(datos) # Rows Columns
# #Look at column names
names(datos)
characters <- sapply(datos, is.character)
datos[characters] <- lapply(datos[characters], as.factor)
datos$ascitis <- ordered(datos$ascitis,
levels = c("NO",
"Grado 1: Leve",
"Grado 2: Moderada",
"Grado 3: Severa")
# labels = c("NO",
#            "Grado 1: Leve",
#            "Grado 2: Moderada",
#            "Grado 3: Severa")
)
# Ordenar niveles
# # view a summary
descriptivoCategorico <- summary(datos)
descriptivoCategorico
write.xlsx(descriptivoCategorico,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoCategorico.xlsx",
sheetName = "puntosDeCorte",
append = FALSE)
descriptivoContinuo <- describe(datos)
descriptivoContinuo
write.xlsx(descriptivoContinuo,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoContinuo.xlsx",
sheetName = "puntosDeCorte",
append = FALSE)
descriptivoLRA <- describe.by(datos, datos$LRA)
descriptivoLRA
write.xlsx(descriptivoLRA$NO,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoLRA.xlsx",
sheetName = "NO",
append = FALSE)
write.xlsx(descriptivoLRA$SI,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoLRA.xlsx",
sheetName = "SI",
append = TRUE)
frequenciesCrosstabs <- function( dependiente = dependiente, independiente = independiente )
{
library(gmodels)
dependiente.independiente <- table(independiente, dependiente)
dependiente.independiente <- addmargins(dependiente.independiente) # Adding row/col margins
tabla <- CrossTable(independiente, dependiente, format=c("SPSS"), digits=1)
chi2 <- chisq.test(dependiente.independiente) # Do chisq test Ho: no relathionship
#fisher <- fisher.test(dependiente.independiente) # Do fisher'exact test Ho: no relationship
x <- list(tabla, chi2 )
names(x) <- c("tabla", "chi2")
x
}
frequenciesCrosstabs(datos$LRA, datos$HTA)
frequenciesCrosstabs(datos$LRA, datos$DM)
frequenciesCrosstabs(datos$LRA, datos$EPOC)
frequenciesCrosstabs(datos$LRA, datos$ERC)
frequenciesCrosstabs(datos$LRA, datos$cardiopatiaIsquemica)
frequenciesCrosstabs(datos$LRA, datos$valvulopatia)
frequenciesCrosstabs(datos$LRA, datos$enferemdadAutoinmune)
frequenciesCrosstabs(datos$LRA, datos$MELD)
frequenciesCrosstabs(datos$LRA, datos$hipotension)
frequenciesCrosstabs(datos$LRA, datos$soporteVasopresor)
# LRA.HTA <- table(datos$LRA,datos$HTA)
# LRA.HTA <- addmargins(LRA.HTA) # Adding row/col margins
# CrossTable(datos$LRA,datos$HTA, format=c("SPSS"), digits=1)
# chisq.test(LRA.HTA) # Do chisq test Ho: no relathionship
# fisher.test(LRA.HTA) # Do fisher'exact test Ho: no relationship
#
# LRA.DM <- table(datos$LRA,datos$DM)
# LRA.DM <- addmargins(LRA.DM) # Adding row/col margins
# CrossTable(datos$LRA,datos$DM, format=c("SPSS"), digits=1)
# chisq.test(LRA.DM) # Do chisq test Ho: no relathionship
# fisher.test(LRA.DM) # Do fisher'exact test Ho: no relationship
#
# LRA.DM <- table(datos$LRA,datos$DM)
# LRA.DM <- addmargins(LRA.DM) # Adding row/col margins
# CrossTable(datos$LRA,datos$DM, format=c("SPSS"), digits=1)
# chisq.test(LRA.DM) # Do chisq test Ho: no relathionship
# fisher.test(LRA.DM) # Do fisher'exact test Ho: no relationship
summary(glm(LRA ~ ascitis , data = datos, family = "binomial"))
datos$ascitis
frequenciesCrosstabs(datos$LRA, datos$ascitis)
summary(glm(LRA ~ ascitis + sexo , data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + sexo  = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + hemoglobina , data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + hemoglobina + sexo, data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + hemoglobina + sexo + encefalopatia,
data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + hemoglobina, data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + edad, data = datos, family = "binomial"))
summary(glm(LRA ~ MELD + edad, data = datos, family = "binomial"))
summary(glm(LRA ~ ascitis + edad, data = datos, family = "binomial"))
missmap(datos, main = "Missing values vs observed")
library(Amelia)
missmap(datos, main = "Missing values vs observed")
install.packages("Amelia")
library(Amelia)
missmap(datos, main = "Missing values vs observed")
contrast(datos$ascitis)
datos[sapply(datos, function(datos) !any(is.na(datos)))]
# Paso 2 obtencion de datos
library(readxl)
base <- read_excel("~/OneDrive - Universidad del rosario/projects/Tesis/base.xlsx",
col_types = c("text", "text", "numeric",
"text", "numeric", "numeric", "numeric",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text", "text", "date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "text", "numeric", "numeric",
"text", "date", "numeric", "date",
"text", "date", "date"))
View(base)
datos <- as.data.frame(base)
datos <- datos[sapply(datos, function(datos) !any(is.na(datos)))]
datos <- datos[sapply(datos, function(datos) !any(is.na(datos)))]
# Paso 1: Source + library  ####
library("e1071")
library("dplyr")
library("xlsx")
library("pastecs")
library("OptimalCutpoints")
library("ggplot2")
library("lubridate")
library("readxl")
library("psych")
library("gmodels")
library("openintro")
suppressPackageStartupMessages(library("dplyr"))
# Paso 2 obtencion de datos
library(readxl)
base <- read_excel("~/OneDrive - Universidad del rosario/projects/Tesis/base.xlsx",
col_types = c("text", "text", "numeric",
"text", "numeric", "numeric", "numeric",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text", "text", "date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "text", "numeric", "numeric",
"text", "date", "numeric", "date",
"text", "date", "date"))
View(base)
datos <- as.data.frame(base)
datos <- datos[sapply(datos, function(datos) !any(is.na(datos)))]
# View the first 6 rows of data
head(datos)
#  View the last 6 rows of data
tail(datos)
#  View a condensed summary of the data
glimpse(datos)
# View its class
class(datos) #data.frame
# view dimensions
dim(datos) # Rows Columns
# #Look at column names
names(datos)
characters <- sapply(datos, is.character)
datos[characters] <- lapply(datos[characters], as.factor)
datos$ascitis <- ordered(datos$ascitis,
levels = c("NO",
"Grado 1: Leve",
"Grado 2: Moderada",
"Grado 3: Severa")
# labels = c("NO",
#            "Grado 1: Leve",
#            "Grado 2: Moderada",
#            "Grado 3: Severa")
)
# Ordenar niveles
# # view a summary
descriptivoCategorico <- summary(datos)
descriptivoCategorico
write.xlsx(descriptivoCategorico,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoCategorico.xlsx",
sheetName = "puntosDeCorte",
append = FALSE)
descriptivoContinuo <- describe(datos)
descriptivoContinuo
write.xlsx(descriptivoContinuo,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoContinuo.xlsx",
sheetName = "puntosDeCorte",
append = FALSE)
descriptivoLRA <- describe.by(datos, datos$LRA)
descriptivoLRA
write.xlsx(descriptivoLRA$NO,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoLRA.xlsx",
sheetName = "NO",
append = FALSE)
write.xlsx(descriptivoLRA$SI,
"/Users/Juan/OneDrive - Universidad del rosario/projects/Tesis/resultados/descriptivoLRA.xlsx",
sheetName = "SI",
append = TRUE)
frequenciesCrosstabs <- function( dependiente = dependiente, independiente = independiente )
{
library(gmodels)
dependiente.independiente <- table(independiente, dependiente)
dependiente.independiente <- addmargins(dependiente.independiente) # Adding row/col margins
tabla <- CrossTable(independiente, dependiente, format=c("SPSS"), digits=1)
chi2 <- chisq.test(dependiente.independiente) # Do chisq test Ho: no relathionship
#fisher <- fisher.test(dependiente.independiente) # Do fisher'exact test Ho: no relationship
x <- list(tabla, chi2 )
names(x) <- c("tabla", "chi2")
x
}
frequenciesCrosstabs(datos$LRA, datos$HTA)
frequenciesCrosstabs(datos$LRA, datos$DM)
frequenciesCrosstabs(datos$LRA, datos$EPOC)
frequenciesCrosstabs(datos$LRA, datos$ERC)
frequenciesCrosstabs(datos$LRA, datos$cardiopatiaIsquemica)
frequenciesCrosstabs(datos$LRA, datos$valvulopatia)
frequenciesCrosstabs(datos$LRA, datos$enferemdadAutoinmune)
frequenciesCrosstabs(datos$LRA, datos$MELD)
frequenciesCrosstabs(datos$LRA, datos$hipotension)
frequenciesCrosstabs(datos$LRA, datos$soporteVasopresor)
# LRA.HTA <- table(datos$LRA,datos$HTA)
# LRA.HTA <- addmargins(LRA.HTA) # Adding row/col margins
# CrossTable(datos$LRA,datos$HTA, format=c("SPSS"), digits=1)
# chisq.test(LRA.HTA) # Do chisq test Ho: no relathionship
# fisher.test(LRA.HTA) # Do fisher'exact test Ho: no relationship
#
# LRA.DM <- table(datos$LRA,datos$DM)
# LRA.DM <- addmargins(LRA.DM) # Adding row/col margins
# CrossTable(datos$LRA,datos$DM, format=c("SPSS"), digits=1)
# chisq.test(LRA.DM) # Do chisq test Ho: no relathionship
# fisher.test(LRA.DM) # Do fisher'exact test Ho: no relationship
#
# LRA.DM <- table(datos$LRA,datos$DM)
# LRA.DM <- addmargins(LRA.DM) # Adding row/col margins
# CrossTable(datos$LRA,datos$DM, format=c("SPSS"), digits=1)
# chisq.test(LRA.DM) # Do chisq test Ho: no relathionship
# fisher.test(LRA.DM) # Do fisher'exact test Ho: no relationship
model <- glm(LRA ~.,family=binomial(link='logit'),data=datos)
glm(LRA ~. -ID,family=binomial(link='logit'),data=datos)
glm(LRA ~. -ID-historia,family=binomial(link='logit'),data=datos)
summary(glm(LRA ~ ascitis + edad, data = datos, family = "binomial"))
